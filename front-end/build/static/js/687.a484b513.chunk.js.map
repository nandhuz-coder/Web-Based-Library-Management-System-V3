{"version":3,"file":"static/js/687.a484b513.chunk.js","mappings":"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","sources":["admin/Admin-mails/mails.jsx","partials/Header/Admin-nav/admin-nav.jsx","partials/Header/alert/alert.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AdminNavbar from '../../partials/Header/Admin-nav/admin-nav';\r\nimport Alert from '../../partials/Header/alert/alert';\r\nimport axios from 'axios';\r\n\r\nconst MailConfigPage = () => {\r\n    const [mailConfigs, setMailConfigs] = useState([]);\r\n    const [toggles, setToggles] = useState({\r\n        requestBooks: false,\r\n        issueBooks: false,\r\n        passwordUpdateOtp: false,\r\n        signupOtp: false,\r\n        signinOtp: false,\r\n    });\r\n    const [success, setSuccess] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [selectedMails, setSelectedMails] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getMails = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get('/api/admin/mails/config');\r\n            const data = response.data[0];\r\n            if (!data) {\r\n                setError('No config found.');\r\n                return;\r\n            }\r\n            const togglesData = {};\r\n            Object.keys(data.toggles).forEach((key) => {\r\n                togglesData[key] = data.toggles[key].switches;\r\n            });\r\n            setToggles(togglesData);\r\n\r\n            const updatedMailConfigs = data.mails.map(mail => ({ ...mail, loading: false }));\r\n            setMailConfigs(updatedMailConfigs);\r\n\r\n            const initialSelections = {};\r\n            Object.keys(data.toggles).forEach((key) => {\r\n                const mail = data.toggles[key].mail;\r\n                initialSelections[key] = mail || (updatedMailConfigs.length ? updatedMailConfigs[0].email : '');\r\n            });\r\n            setSelectedMails(initialSelections);\r\n        } catch (err) {\r\n            setError('Failed to fetch mail configurations.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleToggle = (event) => {\r\n        const { name, checked } = event.target;\r\n        setToggles(prevToggles => ({\r\n            ...prevToggles,\r\n            [name]: checked,\r\n        }));\r\n        if (!checked) {\r\n            setSelectedMails(prevSelectedMails => ({\r\n                ...prevSelectedMails,\r\n                [name]: '',\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (index, event) => {\r\n        const { name, value } = event.target;\r\n        setMailConfigs(prevConfigs => {\r\n            const updatedConfigs = [...prevConfigs];\r\n            updatedConfigs[index][name] = value;\r\n            return updatedConfigs;\r\n        });\r\n    };\r\n\r\n    const handleMailDelete = async (mail) => {\r\n        const confirmDelete = window.confirm(`Are you sure you want to delete the mail configuration for ${mail}?`);\r\n        if (!confirmDelete) return;\r\n        try {\r\n            const response = await axios.post('/api/admin/mails/delete', { email: mail });\r\n            if (response.data.success) {\r\n                setSuccess(response.data.success);\r\n            } else {\r\n                setError(response.data.error);\r\n            }\r\n            getMails();\r\n        } catch (err) {\r\n            setError(err.response?.data?.error || 'Failed to delete mail.');\r\n        }\r\n    };\r\n\r\n    const handleSelectionChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setSelectedMails(prevSelectedMails => ({\r\n            ...prevSelectedMails,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const dismissAlert = (type) => {\r\n        if (type === 'error') {\r\n            setError('');\r\n        } else if (type === 'success') {\r\n            setSuccess('');\r\n        }\r\n    };\r\n\r\n    const handleUpdate = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.post('/api/admin/mails/update', {\r\n                toggles,\r\n                mails: mailConfigs,\r\n                selections: selectedMails,\r\n            });\r\n            if (response.data.success) {\r\n                setSuccess(response.data.success);\r\n            } else {\r\n                setError(response.data.error);\r\n            }\r\n            getMails();\r\n        } catch (err) {\r\n            setError(err.response?.data?.error || 'Failed to update mail configurations.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleConfigure = async (index) => {\r\n        setMailConfigs(prevConfigs => {\r\n            const updatedConfigs = [...prevConfigs];\r\n            updatedConfigs[index].loading = true;\r\n            return updatedConfigs;\r\n        });\r\n        try {\r\n            const response = await axios.post('/api/admin/mails/configure', {\r\n                email: mailConfigs[index].email,\r\n                authKey: mailConfigs[index].authKey,\r\n            });\r\n            if (response.data.success) {\r\n                setSuccess(response.data.success);\r\n            } else {\r\n                setError(response.data.error);\r\n            }\r\n            getMails();\r\n        } catch (err) {\r\n            setError(err.response?.data?.error || 'Failed to configure email.');\r\n        } finally {\r\n            setMailConfigs(prevConfigs => {\r\n                const updatedConfigs = [...prevConfigs];\r\n                updatedConfigs[index].loading = false;\r\n                return updatedConfigs;\r\n            });\r\n        }\r\n    };\r\n\r\n    const addMailConfig = () => {\r\n        if (mailConfigs.every(mail => mail.configured)) {\r\n            setMailConfigs(prevConfigs => [\r\n                ...prevConfigs,\r\n                { email: '', authKey: '', configured: false, loading: false }\r\n            ]);\r\n        } else {\r\n            setError('Please configure all existing mails before adding new ones.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMails();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            < AdminNavbar />\r\n            <header id=\"main-header\" className=\"py-2 bg-primary text-white\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h1>\r\n                                <i className=\"fa fa-envelope\"></i> Mail Configuration\r\n                            </h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <div className=\"container mt-4\">\r\n                <Alert success={success} error={error} dismissAlert={dismissAlert} />\r\n                <div className=\"card mb-4\">\r\n                    <div className=\"card-header bg-primary text-white\">\r\n                        <h4 className=\"mb-0\">Authenticate Mails (G-mail)</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        {mailConfigs.map((config, index) => (\r\n                            <div className=\"row mb-3\" key={index}>\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor={`email-${index}`}>Email</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            id={`email-${index}`}\r\n                                            name=\"email\"\r\n                                            value={config.email}\r\n                                            onChange={(event) => handleInputChange(index, event)}\r\n                                            disabled={config.configured || config.loading}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor={`authKey-${index}`}>Auth Key</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id={`authKey-${index}`}\r\n                                            name=\"authKey\"\r\n                                            value={config.authKey}\r\n                                            onChange={(event) => handleInputChange(index, event)}\r\n                                            disabled={config.configured || config.loading}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-2 d-flex align-items-center\">\r\n                                    {!config.configured ? (\r\n                                        <button\r\n                                            className={`btn ${config.loading ? 'btn-warning' : 'btn-success'} btn-block`}\r\n                                            onClick={() => handleConfigure(index)}\r\n                                            disabled={config.loading}\r\n                                        >\r\n                                            {config.loading ? (\r\n                                                <div className=\"spinner-border spinner-border-sm text-light\" role=\"status\">\r\n                                                    <span className=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            ) : 'Configure'}\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button\r\n                                            className=\"btn btn-danger btn-block\"\r\n                                            onClick={() => handleMailDelete(config.email)}\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <button className=\"btn btn-secondary btn-block\" onClick={addMailConfig}>\r\n                                    Add Mail\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-header bg-info text-white\">\r\n                        <h4 className=\"mb-0\">Notification Settings</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        {Object.keys(toggles).map((key) => (\r\n                            <div className=\"form-group row mb-3\" key={key}>\r\n                                <label className=\"col-md-4 col-form-label text-capitalize\">\r\n                                    {key.replace(/([A-Z])/g, ' $1')}\r\n                                </label>\r\n                                <div className=\"col-md-4\">\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name={key}\r\n                                        value={selectedMails[key] || ''}\r\n                                        onChange={handleSelectionChange}\r\n                                        disabled={!toggles[key]}\r\n                                    >\r\n                                        <option value=\"\" disabled>Select Mail</option>\r\n                                        {mailConfigs.map((mailConfig, index) => (\r\n                                            <option key={index} value={mailConfig.email} disabled={!mailConfig.configured}>\r\n                                                {mailConfig.email}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"checkbox\"\r\n                                            id={key}\r\n                                            name={key}\r\n                                            checked={toggles[key]}\r\n                                            onChange={handleToggle}\r\n                                        />\r\n                                        <label className=\"form-check-label\" htmlFor={key}>\r\n                                            Enable\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        <button className=\"btn btn-primary btn-lg d-block mx-auto\" onClick={handleUpdate} disabled={loading}>\r\n                            {loading ? (\r\n                                <div className=\"spinner-border spinner-border-sm text-light\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            ) : 'Update'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MailConfigPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nconst AdminNavbar = () => {\r\n    const [global, setGlobal] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState();\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get('/api/global');\r\n            const data = await response.data;\r\n            setGlobal(data.global);\r\n            setCurrentUser(data.currentUser);\r\n        } catch (error) {\r\n            console.error('Error fetching data', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        const interval = setInterval(() => {\r\n            fetchData();\r\n        }, 60000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n    const getUserLogout = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            await axios.get('/auth/1/user-logout');\r\n            navigate('/');\r\n        } catch (error) {\r\n            navigate('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-0 sticky-top\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"/admin\">Home</a>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item px-2\">\r\n                            <Link to={`/admin/books/bookInventory/`} id=\"book_inventory\" title=\"Book Inventory\" className=\"nav-link\">Book Inventory</Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item px-2\">\r\n                            <Link to={`/admin/1/users/`} id=\"users_list\" title=\"Users\" className=\"nav-link\">Users</Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item px-2\">\r\n                            <Link to={`/admin/1/addbook`} id=\"add_book\" title=\"Add Books\" className=\"nav-link\">Add Books</Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item px-2\">\r\n                            <Link to={`/admin/1/book/stockout`} id=\"stock_out\" title=\"Stock Out\" className=\"nav-link\">StockOut&nbsp;\r\n                                <span className=\"badge badge-danger\">\r\n                                    {global.stock ? global.stock : 0}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item px-2\">\r\n                            <Link to={`/admin/1/book/request`} id=\"request\" title=\"request\" className=\"nav-link\">Request&nbsp;\r\n                                <span className=\"badge badge-success\">\r\n                                    {global.reqbook ? global.reqbook : 0}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item px-2\">\r\n                            <Link to={`/admin/1/book/return`} id=\"return\" title=\"return\" className=\"nav-link\">Return&nbsp;\r\n                                <span className=\"badge badge-warning\">\r\n                                    {global.return ? global.return : 0}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item px-2\">\r\n                            <Link to={`/books`} title=\"Browse Books\" className=\"nav-link\">\r\n                                Browse Books\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        {currentUser ? (\r\n                            <li className=\"nav-item dropdown mr-3\">\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"nav-link dropdown-toggle\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    id=\"admin-drop-down\"\r\n                                >\r\n                                    <i className=\"fa fa-user\"></i> Welcome {currentUser.username}\r\n                                </a>\r\n                                <div className=\"dropdown-menu\">\r\n                                    <Link to={`/admin/1/profile`} title=\"profile\" className=\"dropdown-item\">\r\n                                        <i className=\"fa fa-user-circle\"></i> Profile\r\n                                    </Link>\r\n                                    <a href=\"\" onClick={(e) => getUserLogout(e)} className=\"dropdown-item\">\r\n                                        <i className=\"fa fa-user-times\"></i> Logout\r\n                                    </a>\r\n                                    <Link className=\"dropdown-item\" to={\"/user/dashboard/1\"}>\r\n                                        <i className=\"fa fa-gear\"></i> User Dashboard</Link>\r\n                                </div>\r\n                            </li>\r\n                        ) : (\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"/login\" className=\"nav-link\">\r\n                                    <i className=\"fa fa-gear\"></i> ProfileLogin\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ error, success, warning, dismissAlert }) => {\r\n    return (\r\n        <div className=\"container my-2 sticky-top\">\r\n            {error && error.length > 0 && (\r\n                <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                    {error}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('error')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {success && success.length > 0 && (\r\n                <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                    {success}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('success')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {warning && warning.length > 0 && (\r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                    {warning}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('warning')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n"],"names":["MailConfigPage","mailConfigs","setMailConfigs","useState","toggles","setToggles","requestBooks","issueBooks","passwordUpdateOtp","signupOtp","signinOtp","success","setSuccess","error","setError","selectedMails","setSelectedMails","loading","setLoading","getMails","async","data","axios","get","togglesData","Object","keys","forEach","key","switches","updatedMailConfigs","mails","map","mail","initialSelections","length","email","err","handleToggle","event","name","checked","target","prevToggles","prevSelectedMails","handleInputChange","index","value","prevConfigs","updatedConfigs","handleSelectionChange","useEffect","_jsxs","_Fragment","children","_jsx","AdminNavbar","id","className","Alert","dismissAlert","type","config","htmlFor","concat","onChange","disabled","configured","authKey","onClick","window","confirm","response","post","_err$response","_err$response$data","handleMailDelete","_err$response3","_err$response3$data","handleConfigure","role","addMailConfig","every","replace","mailConfig","selections","_err$response2","_err$response2$data","global","setGlobal","currentUser","setCurrentUser","fetchData","console","interval","setInterval","clearInterval","navigate","useNavigate","href","Link","to","title","stock","reqbook","return","username","e","preventDefault","getUserLogout","_ref","warning"],"sourceRoot":""}