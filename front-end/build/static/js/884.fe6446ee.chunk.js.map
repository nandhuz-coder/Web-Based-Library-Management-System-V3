{"version":3,"file":"static/js/884.fe6446ee.chunk.js","mappings":"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","sources":["Auth/UserLogin/UserLogin.jsx","partials/Header/alert/alert.jsx","partials/Header/nav/nav.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Alert from '../../partials/Header/alert/alert';\r\nimport Navbar from '../../partials/Header/nav/nav';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst UserLogin = ({ IfUser }) => {\r\n    const navigate = useNavigate();\r\n    const [success, setSuccess] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: '',\r\n    });\r\n    const [otpRequired, setOtpRequired] = useState(false);\r\n    const [otpSent, setOtpSent] = useState(false);\r\n    const [cooldown, setCooldown] = useState(false);\r\n    const [cooldownTime, setCooldownTime] = useState(60);\r\n    const [attempts, setAttempts] = useState(0);\r\n    const [otpVerified, setOtpVerified] = useState(false);\r\n    const [Sendotp, setSendOtp] = useState(false);\r\n    const [otpInput, setOtpInput] = useState('');\r\n    const [otpSecret, setOtpSecret] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/auth/otp-login').then((response) => {\r\n            setOtpRequired(response.data.otp);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let timer;\r\n        if (cooldown) {\r\n            timer = setInterval(() => {\r\n                setCooldownTime((prevTime) => {\r\n                    if (prevTime <= 1) {\r\n                        clearInterval(timer);\r\n                        setCooldown(false);\r\n                        return 60;\r\n                    }\r\n                    return prevTime - 1;\r\n                });\r\n            }, 1000);\r\n        }\r\n        return () => clearInterval(timer);\r\n    }, [cooldown]);\r\n\r\n    const generateOTP = async () => {\r\n        if (cooldown) return;\r\n        try {\r\n            setSendOtp(true);\r\n            const response = await axios.post('/api/auth/generate-otp', formData);\r\n            if (response.data.error) return setError(response.data.error);\r\n            else if (response.data.success) setSuccess(response.data.success);\r\n            setOtpSecret(response.data.secret);\r\n            setSendOtp(false);\r\n            setOtpSent(true);\r\n            setCooldown(true);\r\n            setAttempts(0);\r\n        } catch (error) {\r\n            console.error('There was an error generating OTP:', error);\r\n            setError('There was an error generating OTP.');\r\n            setSendOtp(false);\r\n        }\r\n    };\r\n\r\n    const matchOTP = async () => {\r\n        if (attempts >= 5) {\r\n            setError('Maximum verification attempts reached.');\r\n            return;\r\n        }\r\n        try {\r\n            setSendOtp(true);\r\n            const response = await axios.post('/api/auth/verify-otp', { otp: otpInput, secret: otpSecret });\r\n            if (response.data.valid) {\r\n                setSuccess('OTP matched successfully!');\r\n                setOtpSent(false);\r\n                setOtpVerified(true);\r\n            } else {\r\n                setError('OTP did not match!');\r\n                setOtpVerified(false);\r\n            }\r\n            setSendOtp(false);\r\n        } catch (error) {\r\n            console.error('There was an error matching OTP:', error);\r\n            setError('There was an error matching OTP.');\r\n            setSendOtp(false);\r\n        }\r\n        setAttempts(attempts + 1);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleOtpChange = (e) => {\r\n        setOtpInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/auth/user-login', formData);\r\n            if (response.data.success) {\r\n                setSuccess(response.data.success);\r\n                setTimeout(() => {\r\n                    navigate('/user/dashboard/1');\r\n                }, 700);\r\n            } else {\r\n                setError(response.data.error);\r\n            }\r\n        } catch (error) {\r\n            console.error('There was an error logging in:', error);\r\n            setError('There was an error logging in.');\r\n        }\r\n    };\r\n\r\n    const dismissAlert = (type) => {\r\n        if (type === 'error') {\r\n            setError('');\r\n        } else if (type === 'success') {\r\n            setSuccess('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section\r\n            style={{\r\n                background: 'url(\"/image/other/2.jpg\") no-repeat center center fixed',\r\n                backgroundSize: '100% 100%',\r\n                WebkitBackgroundSize: '100% 100%',\r\n                MozBackgroundSize: '100% 100%',\r\n                OBackgroundSize: '100% 100%',\r\n                MsBackgroundSize: '100% 100%',\r\n            }}\r\n        >\r\n            <IfUser />\r\n            <Navbar />\r\n            <Alert success={success} error={error} dismissAlert={dismissAlert} />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <div className=\"card\" style={{ marginTop: '5%', marginBottom: '5%' }}>\r\n                            <div className=\"card-header text-center\">\r\n                                <h4>User Login</h4>\r\n                            </div>\r\n                            <div className=\"card-block\">\r\n                                <form className=\"p-3\" onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\" className=\"form-control-label\">Username</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"username\"\r\n                                            name=\"username\"\r\n                                            placeholder=\"Username\"\r\n                                            className=\"form-control\"\r\n                                            required\r\n                                            value={formData.username}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\" className=\"form-control-label\">Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            className=\"form-control\"\r\n                                            required\r\n                                            value={formData.password}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    {otpRequired && (\r\n                                        <div>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={generateOTP}\r\n                                                disabled={cooldown || Sendotp}\r\n                                                className=\"btn btn-primary btn-block\"\r\n                                            >\r\n                                                {Sendotp ? (\r\n                                                    <>\r\n                                                        <div className=\"spinner\" role=\"status\"></div>\r\n                                                        <span className=\"sr-only\">Loading...</span>\r\n                                                    </>\r\n                                                ) : cooldown ? `Wait ${cooldownTime} seconds` : 'Get OTP'}\r\n                                            </button>\r\n                                            {otpSent && (\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"otp\" className=\"form-control-label\">OTP</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id=\"otp\"\r\n                                                        name=\"otp\"\r\n                                                        placeholder=\"OTP\"\r\n                                                        className=\"form-control\"\r\n                                                        required\r\n                                                        value={otpInput}\r\n                                                        onChange={handleOtpChange}\r\n                                                        maxLength={6}\r\n                                                    />\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        onClick={matchOTP}\r\n                                                        disabled={otpInput.length !== 6 || Sendotp}\r\n                                                        className=\"btn btn-secondary btn-block\"\r\n                                                    >\r\n                                                        {Sendotp ? (\r\n                                                            <div className=\"spinner\" role=\"status\"></div>\r\n                                                        ) : 'Verify OTP'}\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        id=\"submit_btn\"\r\n                                        className=\"btn btn-success btn-block\"\r\n                                        disabled={otpRequired && !otpVerified}\r\n                                    >\r\n                                        Login!\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default UserLogin;","import React from 'react';\r\n\r\nconst Alert = ({ error, success, warning, dismissAlert }) => {\r\n    return (\r\n        <div className=\"container my-2 sticky-top\">\r\n            {error && error.length > 0 && (\r\n                <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                    {error}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('error')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {success && success.length > 0 && (\r\n                <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                    {success}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('success')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {warning && warning.length > 0 && (\r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                    {warning}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('warning')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './nav.css'\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark sticky-top\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        <img\r\n          src=\"/image/other/purepng.com-booksbookillustratedwrittenprintedliteratureclipart-1421526451707uyace.png\"\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"\"\r\n        />\r\n        Library Management System\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item pl-2\"><Link className='btn btn-success' to={'/auth/user-login'}>Login</Link></li>\r\n          <li className=\"nav-item pl-2\"><Link className='btn btn-success' to={'/auth/user-signup'}>User Sign Up</Link></li>\r\n          <li className=\"nav-item pl-2\"><Link className='btn btn-success' to={'/books/'}>Browse Books</Link></li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              style={{ marginRight: '0px' }}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-secondary btn-search\" type=\"button\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":["_ref","IfUser","navigate","useNavigate","success","setSuccess","useState","error","setError","formData","setFormData","username","password","otpRequired","setOtpRequired","otpSent","setOtpSent","cooldown","setCooldown","cooldownTime","setCooldownTime","attempts","setAttempts","otpVerified","setOtpVerified","Sendotp","setSendOtp","otpInput","setOtpInput","otpSecret","setOtpSecret","useEffect","axios","get","then","response","data","otp","timer","setInterval","prevTime","clearInterval","handleChange","e","name","value","target","_jsxs","style","background","backgroundSize","WebkitBackgroundSize","MozBackgroundSize","OBackgroundSize","MsBackgroundSize","children","_jsx","Navbar","Alert","dismissAlert","type","className","marginTop","marginBottom","onSubmit","async","preventDefault","post","setTimeout","console","htmlFor","id","placeholder","required","onChange","onClick","secret","disabled","_Fragment","role","concat","maxLength","valid","length","warning","href","src","width","height","alt","Link","to","marginRight"],"sourceRoot":""}