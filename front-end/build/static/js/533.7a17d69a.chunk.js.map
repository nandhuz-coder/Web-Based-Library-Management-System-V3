{"version":3,"file":"static/js/533.7a17d69a.chunk.js","mappings":"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","sources":["partials/Header/User-nav/user-nav.jsx","partials/Header/alert/alert.jsx","user/User-Return-Renew/Return-Renew.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst UserNav = () => {\r\n    const [currentUser, setUser] = useState(null);\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const response = await axios.get('/api/global/user');\r\n                setUser(response.data.user);\r\n            } catch (error) {\r\n                console.error('Error fetching user data:', error);\r\n            }\r\n        };\r\n        fetchUser();\r\n    }, []);\r\n    const navigate = useNavigate();\r\n    const getUserLogout = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            await axios.get('/auth/1/user-logout');\r\n            navigate('/');\r\n        } catch (error) {\r\n            navigate('/');\r\n        }\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-0\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to={\"/user/dashboard/1\"}>Home</Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item px-2\">\r\n                            <Link className=\"nav-link\" to={\"/books/\"}>Browse Books</Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    {currentUser && currentUser.isAdmin && (\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item px-2\">\r\n                                <Link className=\"nav-link\" to={\"/admin\"}>Admin Dashboard</Link>\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n\r\n                    {currentUser && (\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {currentUser.violationFlag && (\r\n                                <li className=\"nav-item align-self-center mr-2\">\r\n                                    <i className=\"fa fa-flag text-danger\"></i>\r\n                                </li>\r\n                            )}\r\n\r\n                            <li className=\"nav-item dropdown mr-3\">\r\n                                <a href=\"#\" className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                    <i className=\"fa fa-user\"></i> Welcome {currentUser.username}\r\n                                </a>\r\n                                <div className=\"dropdown-menu\">\r\n                                    <Link to={\"/user/1/profile\"} className=\"dropdown-item\">\r\n                                        <i className=\"fa fa-user-circle\"></i> Profile\r\n                                    </Link>\r\n                                    <a href=\"\" className=\"dropdown-item\" onClick={(e) => getUserLogout(e)}>\r\n                                        <i className=\"fa fa-user-times\"></i> Logout\r\n                                    </a>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/user/1/notification\"} className=\"nav-link\">\r\n                                    <i className=\"fa fa-bell\"></i>\r\n                                    <span className=\"badge badge-danger badge-pill\">2</span>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default UserNav;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ error, success, warning, dismissAlert }) => {\r\n    return (\r\n        <div className=\"container my-2 sticky-top\">\r\n            {error && error.length > 0 && (\r\n                <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                    {error}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('error')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {success && success.length > 0 && (\r\n                <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                    {success}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('success')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {warning && warning.length > 0 && (\r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                    {warning}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => dismissAlert('warning')}\r\n                    >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Loading from '../../Loading/Loading';\r\nimport UserNav from '../../partials/Header/User-nav/user-nav';\r\nimport Alert from '../../partials/Header/alert/alert';\r\n\r\nconst RenewReturn = () => {\r\n    const [books, setBooks] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [render, setRender] = useState(true);\r\n    const [success, setSuccess] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const fetchBook = () => {\r\n        axios.get('/user/books/1/return-renew')\r\n            .then(response => {\r\n                setBooks(response.data.user);\r\n                setCurrentUser(response.data.currentUser);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n                setError('Failed to fetch books. Please try again later.');\r\n            }).finally(() => setRender(false));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchBook();\r\n    }, []);\r\n\r\n    const handleRenew = (bookId) => {\r\n        axios.post(`/api/user/books/${bookId}/renew`)\r\n            .then(response => {\r\n                console.log('Book renewed successfully:', response.data);\r\n                fetchBook();\r\n                if (response.data.success) setSuccess(response.data.success);\r\n                else setError(response.data.error);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error renewing book:', error);\r\n                setError('Failed to renew the book. Please try again later.');\r\n            }).finally(() => setRender(false));\r\n    };\r\n\r\n    const handleReturn = (bookId) => {\r\n        axios.post(`/api/user/books/return/${bookId}`)\r\n            .then(response => {\r\n                console.log('Book returned successfully:', response.data);\r\n                fetchBook();\r\n                if (response.data.success) setSuccess(response.data.success);\r\n                else setError(response.data.error);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error returning book:', error);\r\n                setError('Failed to return the book. Please try again later.');\r\n            }).finally(() => setRender(false));\r\n    };\r\n\r\n    const dismissAlert = (type) => {\r\n        if (type === 'error') {\r\n            setError('');\r\n        } else if (type === 'success') {\r\n            setSuccess('');\r\n        }\r\n    };\r\n\r\n    if (render) return <Loading />;\r\n\r\n    return (\r\n        <>\r\n            <UserNav />\r\n            <header id=\"main-header\" className=\"py-2 bg-info text-white\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h1><i className=\"fa fa-retweet\"></i> Renew/Return</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <Alert success={success} error={error} dismissAlert={dismissAlert} />\r\n            <section className=\"mt-4 py-3\">\r\n                <div className=\"container\" style={{ maxWidth: '80%' }}>\r\n                    <div className=\"col mx-auto\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header text-center\">\r\n                                <h4>All Renewables/Returnables</h4>\r\n                            </div>\r\n                            <table className=\"table table-striped\">\r\n                                <thead className=\"thead-inverse\">\r\n                                    <tr>\r\n                                        <th>Title</th>\r\n                                        <th>Author</th>\r\n                                        <th>Issue date</th>\r\n                                        <th>Return date</th>\r\n                                        <th>Category</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {books.map(book => (\r\n                                        <tr key={book._id}>\r\n                                            <td>{book.book_info.title}</td>\r\n                                            <td>{book.book_info.author}</td>\r\n                                            <td>{new Date(book.book_info.issueDate).toDateString()}</td>\r\n                                            <td>{new Date(book.book_info.returnDate).toDateString()}</td>\r\n                                            <td>{book.book_info.category}</td>\r\n                                            <td>\r\n                                                {book.book_info.isRenewed ? (\r\n                                                    !book.book_info.isReturn && (\r\n                                                        <button\r\n                                                            className=\"btn btn-xs btn-warning disabled\"\r\n                                                            aria-disabled=\"true\"\r\n                                                        >\r\n                                                            Renewed!\r\n                                                        </button>\r\n                                                    )\r\n                                                ) : (\r\n                                                    currentUser?.violationFlag && new Date(book.book_info.returnDate) < Date.now() ? (\r\n                                                        <button\r\n                                                            className=\"btn btn-xs btn-warning\"\r\n                                                            title=\"You can't renew book when you are flagged\"\r\n                                                        >\r\n                                                            Renew\r\n                                                        </button>\r\n                                                    ) : (\r\n                                                        book.book_info.isReturn ? (\r\n                                                            <>\r\n                                                                <button\r\n                                                                    className=\"btn btn-xs btn-warning disabled\"\r\n                                                                    aria-disabled=\"true\"\r\n                                                                >\r\n                                                                    Renew\r\n                                                                </button>\r\n                                                                <button\r\n                                                                    className=\"btn btn-xs btn-info disabled\"\r\n                                                                    aria-disabled=\"true\"\r\n                                                                >\r\n                                                                    Return\r\n                                                                </button>\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            <>\r\n                                                                <button\r\n                                                                    className=\"btn btn-xs btn-warning\"\r\n                                                                    onClick={() => handleRenew(book.book_info.id)}\r\n                                                                >\r\n                                                                    Renew\r\n                                                                </button>\r\n                                                                <button\r\n                                                                    className=\"btn btn-xs btn-info\"\r\n                                                                    onClick={() => handleReturn(book.book_info.id)}\r\n                                                                >\r\n                                                                    Return\r\n                                                                </button>\r\n                                                            </>\r\n                                                        )\r\n                                                    )\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RenewReturn;\r\n"],"names":["UserNav","currentUser","setUser","useState","useEffect","async","response","axios","get","data","user","error","console","fetchUser","navigate","useNavigate","_jsx","className","children","_jsxs","Link","to","type","id","isAdmin","violationFlag","href","username","onClick","e","preventDefault","getUserLogout","_ref","success","warning","dismissAlert","length","role","RenewReturn","books","setBooks","setCurrentUser","render","setRender","setSuccess","setError","fetchBook","then","catch","finally","Loading","_Fragment","Alert","style","maxWidth","map","book","book_info","title","author","Date","issueDate","toDateString","returnDate","category","isRenewed","isReturn","now","handleRenew","bookId","post","concat","log","handleReturn","_id"],"sourceRoot":""}