{"version":3,"file":"static/js/24.72a9191e.chunk.js","mappings":"uKAIA,MA8IA,EA9IqBA,KACjB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,MACZC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAAC,IAC3BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,OACxCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,KAEzCO,EAAAA,EAAAA,YAAU,KACmBC,WACrB,UACUC,EAAAA,EAAMC,IAAI,sBAADC,OAAuBf,IAAUgB,MAAKJ,UACjD,MAAMK,QAAaC,EAAID,KACvBd,EAAQc,EAAKf,MACbI,EAAeW,EAAKE,MACpBT,EAAYO,EAAKf,KAAKO,SAAWQ,EAAKf,KAAKO,SAAW,GAAG,GAEjE,CAAE,MAAOW,GACLC,QAAQC,IAAI,+BAAgCF,EAChD,GAEJG,EAAkB,GACnB,CAACvB,IAmCJ,OACIwB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,UACvCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAcG,MAAO,CAAEC,WAAY,sBAAuBH,UACrEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAcG,MAAO,CAAEE,MAAO,SAAUJ,SAAExB,EAAK6B,WAEjEJ,EAAAA,EAAAA,MAAA,MAAIF,UAAU,YAAWC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAAEE,MAAO,MAAOE,WAAY,QAASN,SAAC,aAAgBxB,EAAK+B,WAE5EN,EAAAA,EAAAA,MAAA,MAAIF,UAAU,YAAWC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAAEE,MAAO,MAAOE,WAAY,QAASN,SAAC,WAAcxB,EAAKgC,SAE1EP,EAAAA,EAAAA,MAAA,MAAIF,UAAU,YAAWC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAAEE,MAAO,MAAOE,WAAY,QAASN,SAAC,eAAkBxB,EAAKiC,aAE9ER,EAAAA,EAAAA,MAAA,MAAIF,UAAU,YAAWC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAAEE,MAAO,MAAOE,WAAY,QAASN,SAAC,eAAkBxB,EAAKkC,UAE9EZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAYG,MAAO,CAAEE,MAAO,QAASJ,SAAExB,EAAKmC,oBAIlEV,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,CAC9BrB,IACGsB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAZ,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,MAAKC,UACdF,EAAAA,EAAAA,KAAA,UACIC,UAAU,8BACVc,KAAK,SACL,cAAY,WACZ,cAAY,sBACZ,gBAAc,QACd,gBAAc,qBAAoBb,SACrC,uBAILF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAWe,GAAG,qBAAoBd,UAC7CC,EAAAA,EAAAA,MAAA,QAAMc,SAtEV7B,UACxB8B,EAAEC,iBACF,IACI,MAAM,KAAE1B,SAAeJ,EAAAA,EAAM+B,KAAK,cAAD7B,OAAeb,EAAK2C,IAAG,YAAY,CAAEtC,YACtEG,EAAYO,EAAKR,UACjBD,EAAW,GACf,CAAE,MAAOY,GACLC,QAAQD,MAAM,4BAA6BA,EAC/C,GA8DgEM,SAAA,EAChCF,EAAAA,EAAAA,KAAA,YAAUsB,KAAK,UAAUrB,UAAU,eAAesB,MAAOxC,EAASyC,SA3EzEN,IACzBlC,EAAWkC,EAAEO,OAAOF,MAAM,KA2EMvB,EAAAA,EAAAA,KAAA,SAAOe,KAAK,SAASd,UAAU,4DAM/CD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8BAA6BC,SACtCjB,EAASyC,KAAK3C,IACXoB,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kBAAiBC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,UAAAE,SAASnB,EAAQ0B,OAAOkB,YACxB3B,EAAAA,EAAAA,KAAA,QAAAE,UAAMC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,OAAK,IAAI0B,KAAK7C,EAAQ8C,MAAMC,qBACtC9B,EAAAA,EAAAA,KAAA,KAAAE,SAAInB,EAAQgD,OAEXlD,GAAeE,EAAQ0B,OAAOO,KAAOnC,EAAYwC,MAC9ClB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAZ,SAAA,EACIF,EAAAA,EAAAA,KAAA,UAAQgB,GAAG,OAAOf,UAAU,4BAA2BC,UACnDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAGjBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAWgB,SAAWC,IAAQA,EAAEC,iBAhF5D/B,WACxB,IACI,MAAM,KAAEK,SAAeJ,EAAAA,EAAM2C,OAAO,cAADzC,OAAeb,EAAK2C,IAAG,cAAA9B,OAAa0C,IACvE/C,EAAYO,EAAKR,SACrB,CAAE,MAAOW,GACLC,QAAQD,MAAM,0BAA2BA,EAC7C,GA0EsGsC,CAAoBnD,EAAQsC,IAAI,EAAInB,UAClGF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kCAAiCC,UAC/CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAIrBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASe,GAAG,iBAAgBd,UACvCC,EAAAA,EAAAA,MAAA,QAAMc,SAAWC,IAAQA,EAAEC,iBA9E7C/B,OAAO6C,EAAWF,KACxC,IACI,MAAM,KAAEtC,SAAeJ,EAAAA,EAAM8C,IAAI,cAAD5C,OAAeb,EAAK2C,IAAG,cAAA9B,OAAa0C,GAAa,CAAEF,SACnF7C,EAAYO,EAAKR,SACrB,CAAE,MAAOW,GACLC,QAAQD,MAAM,yBAA0BA,EAC5C,GAwEqFwC,CAAkBrD,EAAQsC,IAAKtC,EAAQgD,KAAK,EAAI7B,SAAA,EACzFF,EAAAA,EAAAA,KAAA,YAAUsB,KAAK,gBAAgBrB,UAAU,eAAeoC,aAActD,EAAQgD,QAC9E/B,EAAAA,EAAAA,KAAA,SAAOe,KAAK,SAASd,UAAU,6DApBdlB,EAAQsC,kBA+B/D,C","sources":["book/book-details.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst BooksDetails = () => {\r\n    const { bookid } = useParams();\r\n    const [book, setBook] = useState({});\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [comment, setComment] = useState('');\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchBookDetails = async () => {\r\n            try {\r\n                await axios.get(`/api/books/details/${bookid}`).then(async (res) => {\r\n                    const data = await res.data\r\n                    setBook(data.book);\r\n                    setCurrentUser(data.user);\r\n                    setComments(data.book.comments ? data.book.comments : []);\r\n                })\r\n            } catch (error) {\r\n                console.log(\"Error fetching book details:\", error);\r\n            }\r\n        };\r\n        fetchBookDetails();\r\n    }, [bookid]);\r\n\r\n    const handleCommentChange = (e) => {\r\n        setComment(e.target.value);\r\n    };\r\n\r\n    const handleCommentSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const { data } = await axios.post(`/api/books/${book._id}/comment`, { comment });\r\n            setComments(data.comments);\r\n            setComment('');\r\n        } catch (error) {\r\n            console.error(\"Error submitting comment:\", error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteComment = async (commentId) => {\r\n        try {\r\n            const { data } = await axios.delete(`/api/books/${book._id}/comments/${commentId}`);\r\n            setComments(data.comments);\r\n        } catch (error) {\r\n            console.error(\"Error deleting comment:\", error);\r\n        }\r\n    };\r\n\r\n    const handleEditComment = async (commentId, text) => {\r\n        try {\r\n            const { data } = await axios.put(`/api/books/${book._id}/comments/${commentId}`, { text });\r\n            setComments(data.comments);\r\n        } catch (error) {\r\n            console.error(\"Error editing comment:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-10\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\" style={{ background: 'rgb(100, 170, 236)' }}>\r\n                            <h4 className=\"text-center\" style={{ color: 'green' }}>{book.title}</h4>\r\n                        </div>\r\n                        <h5 className=\"px-3 py-2\">\r\n                            <span style={{ color: 'red', fontWeight: 'bold' }}>Author: </span>{book.author}\r\n                        </h5>\r\n                        <h5 className=\"px-3 py-2\">\r\n                            <span style={{ color: 'red', fontWeight: 'bold' }}>ISBN: </span>{book.ISBN}\r\n                        </h5>\r\n                        <h5 className=\"px-3 py-2\">\r\n                            <span style={{ color: 'red', fontWeight: 'bold' }}>Category: </span>{book.category}\r\n                        </h5>\r\n                        <h5 className=\"px-3 py-2\">\r\n                            <span style={{ color: 'red', fontWeight: 'bold' }}>In Stock: </span>{book.stock}\r\n                        </h5>\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"card-text\" style={{ color: 'blue' }}>{book.description}</h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card my-3 bg-light\">\r\n                        {currentUser && (\r\n                            <>\r\n                                <p className=\"p-3\">\r\n                                    <button\r\n                                        className=\"btn btn-primary float-right\"\r\n                                        type=\"button\"\r\n                                        data-toggle=\"collapse\"\r\n                                        data-target=\"#collapseCommentBox\"\r\n                                        aria-expanded=\"false\"\r\n                                        aria-controls=\"collapseCommentBox\"\r\n                                    >\r\n                                        Leave a comment\r\n                                    </button>\r\n                                </p>\r\n                                <div className=\"collapse\" id=\"collapseCommentBox\">\r\n                                    <form onSubmit={handleCommentSubmit}>\r\n                                        <textarea name=\"comment\" className=\"form-control\" value={comment} onChange={handleCommentChange}></textarea>\r\n                                        <input type=\"submit\" className=\"btn btn-outline-success btn-sm m-1 float-right\" />\r\n                                    </form>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {comments.map((comment) => (\r\n                                <li className=\"list-group-item\" key={comment._id}>\r\n                                    <strong>{comment.author.username}</strong>\r\n                                    <span><em> at {new Date(comment.date).toDateString()}</em></span>\r\n                                    <p>{comment.text}</p>\r\n\r\n                                    {currentUser && comment.author.id === currentUser._id && (\r\n                                        <>\r\n                                            <button id=\"edit\" className=\"btn btn-primary px-1 py-0\">\r\n                                                <i className=\"fa fa-pencil\"></i>\r\n                                            </button>\r\n\r\n                                            <form className=\"d-inline\" onSubmit={(e) => { e.preventDefault(); handleDeleteComment(comment._id); }}>\r\n                                                <button className=\"btn btn-sm btn-danger px-1 py-0\">\r\n                                                    <i className=\"fa fa-trash\"></i>\r\n                                                </button>\r\n                                            </form>\r\n\r\n                                            <div className=\"d-none\" id=\"editCommentBox\">\r\n                                                <form onSubmit={(e) => { e.preventDefault(); handleEditComment(comment._id, comment.text); }}>\r\n                                                    <textarea name=\"comment[text]\" className=\"form-control\" defaultValue={comment.text}></textarea>\r\n                                                    <input type=\"submit\" className=\"btn btn-outline-success btn-sm m-1 float-right\" />\r\n                                                </form>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BooksDetails;\r\n"],"names":["BooksDetails","bookid","useParams","book","setBook","useState","currentUser","setCurrentUser","comment","setComment","comments","setComments","useEffect","async","axios","get","concat","then","data","res","user","error","console","log","fetchBookDetails","_jsx","className","children","_jsxs","style","background","color","title","fontWeight","author","ISBN","category","stock","description","_Fragment","type","id","onSubmit","e","preventDefault","post","_id","name","value","onChange","target","map","username","Date","date","toDateString","text","delete","commentId","handleDeleteComment","put","handleEditComment","defaultValue"],"sourceRoot":""}